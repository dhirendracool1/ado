==21557== Memcheck, a memory error detector
==21557== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==21557== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==21557== Command: ./test_assign4_1
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x80547B6: deSerializeBTreeNodePage (rm_serializer.c:644)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x4207600 is 0 bytes after a block of size 4,096 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054E2C: pinPage (buffer_mgr.c:232)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x80547DA: deSerializeBTreeNodePage (rm_serializer.c:647)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x4207604 is 4 bytes after a block of size 4,096 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054E2C: pinPage (buffer_mgr.c:232)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Conditional jump or move depends on uninitialised value(s)
==21557==    at 0x804C2F6: findChildPageIntKey (btree_mgr.c:1151)
==21557==    by 0x804AF80: searchAndInsertKey (btree_mgr.c:550)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Conditional jump or move depends on uninitialised value(s)
==21557==    at 0x8054DE8: pinPage (buffer_mgr.c:225)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Use of uninitialised value of size 4
==21557==    at 0x804EAE7: find (hashTable.c:111)
==21557==    by 0x8054E0B: pinPage (buffer_mgr.c:228)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Use of uninitialised value of size 4
==21557==    at 0x804EAA5: find (hashTable.c:113)
==21557==    by 0x8054E0B: pinPage (buffer_mgr.c:228)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Conditional jump or move depends on uninitialised value(s)
==21557==    at 0x804EAB4: find (hashTable.c:113)
==21557==    by 0x8054E0B: pinPage (buffer_mgr.c:228)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Conditional jump or move depends on uninitialised value(s)
==21557==    at 0x8054E13: pinPage (buffer_mgr.c:229)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Use of uninitialised value of size 4
==21557==    at 0x8054E41: pinPage (buffer_mgr.c:233)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Use of uninitialised value of size 4
==21557==    at 0x8054EC8: pinPage (buffer_mgr.c:235)
==21557==    by 0x804ACEE: searchAndInsertKey (btree_mgr.c:463)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid write of size 4
==21557==    at 0x8054779: deSerializeBTreeNodePage (rm_serializer.c:639)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x43088b0 is 0 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054734: deSerializeBTreeNodePage (rm_serializer.c:632)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid write of size 4
==21557==    at 0x805477E: deSerializeBTreeNodePage (rm_serializer.c:639)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x43088b4 is 4 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054734: deSerializeBTreeNodePage (rm_serializer.c:632)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x804C2EB: findChildPageIntKey (btree_mgr.c:1151)
==21557==    by 0x804AF80: searchAndInsertKey (btree_mgr.c:550)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x43088b4 is 4 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054734: deSerializeBTreeNodePage (rm_serializer.c:632)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x804B047: searchAndInsertKey (btree_mgr.c:580)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x43088f0 is 8 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x805474D: deSerializeBTreeNodePage (rm_serializer.c:635)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid write of size 4
==21557==    at 0x8054779: deSerializeBTreeNodePage (rm_serializer.c:639)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x4309a58 is 0 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054734: deSerializeBTreeNodePage (rm_serializer.c:632)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid write of size 4
==21557==    at 0x805477E: deSerializeBTreeNodePage (rm_serializer.c:639)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x4309a5c is 4 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054734: deSerializeBTreeNodePage (rm_serializer.c:632)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x804C2EB: findChildPageIntKey (btree_mgr.c:1151)
==21557==    by 0x804AF80: searchAndInsertKey (btree_mgr.c:550)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x4309a5c is 4 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x8054734: deSerializeBTreeNodePage (rm_serializer.c:632)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x804B047: searchAndInsertKey (btree_mgr.c:580)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x4309a98 is 8 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x805474D: deSerializeBTreeNodePage (rm_serializer.c:635)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Invalid read of size 4
==21557==    at 0x804B047: searchAndInsertKey (btree_mgr.c:580)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557==  Address 0x430ac40 is 8 bytes after a block of size 8 alloc'd
==21557==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==21557==    by 0x805474D: deSerializeBTreeNodePage (rm_serializer.c:635)
==21557==    by 0x804AD18: searchAndInsertKey (btree_mgr.c:469)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804B087: searchAndInsertKey (btree_mgr.c:581)
==21557==    by 0x804AC6F: insertKey (btree_mgr.c:379)
==21557==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==21557==    by 0x8048838: main (test_assign4_1.c:33)
==21557== 
==21557== Stack overflow in thread 1: can't grow stack to 0xbe462ff4
==21557== 
==21557== Process terminating with default action of signal 11 (SIGSEGV)
==21557==  Access not within mapped region at address 0xBE462FF4
==21557==    at 0x402BEA0: malloc (vg_replace_malloc.c:291)
==21557==  If you believe this happened as a result of a stack
==21557==  overflow in your program's main thread (unlikely but
==21557==  possible), you can try to increase the size of the
==21557==  main thread stack using the --main-stacksize= flag.
==21557==  The main thread stack size used in this run was 8388608.
==21557== Stack overflow in thread 1: can't grow stack to 0xbe462ff0
==21557== 
==21557== Process terminating with default action of signal 11 (SIGSEGV)
==21557==  Access not within mapped region at address 0xBE462FF0
==21557==    at 0x402442C: _vgnU_freeres (vg_preloaded.c:58)
==21557==  If you believe this happened as a result of a stack
==21557==  overflow in your program's main thread (unlikely but
==21557==  possible), you can try to increase the size of the
==21557==  main thread stack using the --main-stacksize= flag.
==21557==  The main thread stack size used in this run was 8388608.
==21557== 
==21557== HEAP SUMMARY:
==21557==     in use at exit: 313,856,784 bytes in 523,823 blocks
==21557==   total heap usage: 523,847 allocs, 24 frees, 313,888,368 bytes allocated
==21557== 
==21557== LEAK SUMMARY:
==21557==    definitely lost: 1,795,804 bytes in 74,825 blocks
==21557==    indirectly lost: 40 bytes in 3 blocks
==21557==      possibly lost: 0 bytes in 0 blocks
==21557==    still reachable: 312,060,940 bytes in 448,995 blocks
==21557==         suppressed: 0 bytes in 0 blocks
==21557== Rerun with --leak-check=full to see details of leaked memory
==21557== 
==21557== For counts of detected and suppressed errors, rerun with: -v
==21557== Use --track-origins=yes to see where uninitialised values come from
==21557== ERROR SUMMARY: 299349 errors from 19 contexts (suppressed: 0 from 0)
