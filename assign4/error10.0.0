==7352== Memcheck, a memory error detector
==7352== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==7352== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==7352== Command: ./test_assign4_1
==7352== 
==7352== Use of uninitialised value of size 4
==7352==    at 0x40894AB: _itoa_word (_itoa.c:195)
==7352==    by 0x408D5EA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804ABDD: insertKey (btree_mgr.c:358)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x40894B3: _itoa_word (_itoa.c:195)
==7352==    by 0x408D5EA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804ABDD: insertKey (btree_mgr.c:358)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804ABDD: insertKey (btree_mgr.c:358)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804ABDD: insertKey (btree_mgr.c:358)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804B2A8: searchAndInsertKey (btree_mgr.c:622)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804B2A8: searchAndInsertKey (btree_mgr.c:622)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804CCCF: handleLeafOverFlow (btree_mgr.c:1413)
==7352==    by 0x804B34A: searchAndInsertKey (btree_mgr.c:643)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804CCCF: handleLeafOverFlow (btree_mgr.c:1413)
==7352==    by 0x804B34A: searchAndInsertKey (btree_mgr.c:643)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804B5A9: searchAndInsertKey (btree_mgr.c:709)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804B5A9: searchAndInsertKey (btree_mgr.c:709)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 

 ---- INSERTING KEY: 1 ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 1
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 1
 tree)->mgmtData->treeNumEntries: 1
 ---- INSERTING KEY: 11 ----Calling searchAndInsertKey.... From nodePageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 1
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NO SPLIT REQUIRED
 ------- Updated Node --------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 1
 Index: 1, Value: 11
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: 2, Slot: 3
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 1
 tree)->mgmtData->treeNumEntries: 2
 ---- INSERTING KEY: 13 ----Calling searchAndInsertKey.... From nodePageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 1
 Index: 1, Value: 11
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: 2, Slot: 3
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NODE IS FULL
Message: HANDLING LEAF OVERFLOW
 ---------- New Node Data ----------

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 1
 Index: 1, Value: 11
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: 2, Slot: 3
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 1
 tree)->mgmtData->treeNumEntries: 2
 Return Key: 13
----- Updated NODE and TREE DATA ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 1
 Index: 1, Value: 11
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: 2, Slot: 3
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 2
 tree)->mgmtData->treeNumEntries: 3
IMP: NODE IS ALSO A ROOT NODE
Creating new root..........
 ++++++++++ NEW ROOT DATA ++++++++++

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 3
 tree)->mgmtData->treeNumEntries: 3
 ---- INSERTING KEY: 17 ----Calling searchAndInsertKey.... From nodePageNum: 3
---------- Current Node Data: ---------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 2
---------- Current Node Data: ---------

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NO SPLIT REQUIRED
 ------- Updated Node --------

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 17
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: -1, Slot: -1
 --- Tre==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BA5E: searchAndInsertKey (btree_mgr.c:853)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BA5E: searchAndInsertKey (btree_mgr.c:853)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BAF8: searchAndInsertKey (btree_mgr.c:869)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BAF8: searchAndInsertKey (btree_mgr.c:869)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
e Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 3
 tree)->mgmtData->treeNumEntries: 4
Message: NO CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 3
 tree)->mgmtData->treeNumEntries: 4
 ---- INSERTING KEY: 23 ----Calling searchAndInsertKey.... From nodePageNum: 3
---------- Current Node Data: ---------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 2
---------- Current Node Data: ---------

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 17
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NODE IS FULL
Message: HANDLING LEAF OVERFLOW
 ---------- New Node Data ----------

 ------- Node Page: 4 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 17
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: 4, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 3
 tree)->mgmtData->treeNumEntries: 4
 Return Key: 23
----- Updated NODE and TREE DATA ----

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 17
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: 4, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 5
Message: CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 5
 INFO: NOT FULL. NO SPLIT
 ---------- Updated Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 23
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: 4, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 5
 ---- INSERTING KEY: 52 ----Calling searchAndInsertKey.... From nodePageNum: 3
---------- Current Node Data: ---------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 23
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: 4, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 4
---------- Current Node Data: ---------

 ------- Node Page: 4 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NO SPLIT REQUIRED
 ------- Updated Node --------

 ------- Node Page: 4 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: 3, Slot: 2
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 6
Message: NO CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 23
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: 4, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 6[test_assign4_1.c-test b-tree inserting and search-L79-19:45:27] OK: expected <4> and was <4>: number of nodes in btree
[test_assign4_1.c-test b-tree inserting and search-L81-19:45:27] OK: expected <6> and was <6>: number of entries in btree
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected ==7352== Syscall param write(buf) points to uninitialised byte(s)
==7352==    at 0x41262B3: __write_nocancel (syscall-template.S:82)
==7352==    by 0x40B7BA4: _IO_file_write@@GLIBC_2.1 (fileops.c:1289)
==7352==    by 0x40B7A83: new_do_write (fileops.c:543)
==7352==    by 0x40B8799: _IO_file_xsputn@@GLIBC_2.1 (fileops.c:1383)
==7352==    by 0x40AD7F7: fwrite (iofwrite.c:45)
==7352==    by 0x8056112: writeCurrentBlock (storage_mgr.c:276)
==7352==    by 0x8056077: writeBlock (storage_mgr.c:253)
==7352==    by 0x804EC43: forcePage (buffer_mgr.c:201)
==7352==    by 0x804E953: shutdownBufferPool (buffer_mgr.c:99)
==7352==    by 0x804A598: closeBtree (btree_mgr.c:140)
==7352==    by 0x8048ED2: testInsertAndFind (test_assign4_1.c:95)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352==  Address 0x41f9b68 is 64 bytes inside a block of size 4,096 alloc'd
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x804E831: initBufferPool (buffer_mgr.c:62)
==7352==    by 0x804A45B: openBtree (btree_mgr.c:104)
==7352==    by 0x8048A32: testInsertAndFind (test_assign4_1.c:71)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L91-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L100-19:45:27] OK: finished test


 ---- INSERTING KEY: 23 ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 1
 tree)->mgmtData->treeNumEntries: 1
 ---- INSERTING KEY: 52 ----Calling searchAndInsertKey.... From nodePageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NO SPLIT REQUIRED
 ------- Updated Node --------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: 3, Slot: 2
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 1
 tree)->mgmtData->treeNumEntries: 2
 ---- INSERTING KEY: 17 ----Calling searchAndInsertKey.... From nodePageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: 3, Slot: 2
 Index: 2, Page: -1, Slot: -1
Message: THIS LEAF NODE
Message: NODE IS FULL
Message: HANDLING LEAF OVERFLOW
 ---------- New Node Data ----------

 ------- Node Page: 2 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 3, Slot: 2
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 17
 Index: 1, Value: 23
 Index: 0, Page: 3, Slot: 5
 Index: 1, Page: 4, Slot: 4
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 1
 tree)->mgmtData->treeNumEntries: 2
 Return Key: 52
----- Updated NODE and TREE DATA ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 17
 Index: 1, Value: 23
 Index: 0, Page: 3, Slot: 5
 Index: 1, Page: 4, Slot: 4
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 1
 tree)->mgmtData->treeNumNodes: 2
 tree)->mgmtData->treeNumEntries: 3
IMP: NODE IS ALSO A ROOT NODE
Creating new root..........
 ++++++++++ NEW ROOT DATA ++++++++++

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 3
 tree)->mgmtData->treeNumEntries: 3
 ---- INSERTING KEY: 11 ----Calling searchAndInsertKey.... From nodePageNum: 3
---------- Current Node Data: ---------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 17
 Index: 1, Value: 23
 Index: 0, Page: 3, Slot: 5
 Index: 1, Page: 4, Slot: 4
 Index: 2, Page: 2, Slot: -1
Message: THIS LEAF NODE
Message: NODE IS FULL
Message: HANDLING LEAF OVERFLOW
 ---------- New Node Data ----------

 ------- Node Page: 4 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 4, Slot: 4
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 2, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 11
 Index: 1, Value: 17
 Index: 0, Page: 2, Slot: 3
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: 4, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 3
 tree)->mgmtData->treeNumEntries: 3
 Return Key: 23
----- Updated NODE and TREE DATA ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 11
 Index: 1, Value: 17
 Index: 0, Page: 2, Slot: 3
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: 4, Slot: -1
 ---==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804C31C: handleRootOverflow (btree_mgr.c:1126)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804C31C: handleRootOverflow (btree_mgr.c:1126)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408E4BA: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804C334: handleRootOverflow (btree_mgr.c:1128)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Conditional jump or move depends on uninitialised value(s)
==7352==    at 0x408CD30: vfprintf (vfprintf.c:1629)
==7352==    by 0x4093EFE: printf (printf.c:35)
==7352==    by 0x804E606: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804C334: handleRootOverflow (btree_mgr.c:1128)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
 Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 4
Message: CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 2, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 4
 INFO: NOT FULL. NO SPLIT
 ---------- Updated Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 4, Slot: -1
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 4
 ---- INSERTING KEY: 13 ----Calling searchAndInsertKey.... From nodePageNum: 3
---------- Current Node Data: ---------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 4, Slot: -1
 Index: 2, Page: 2, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 11
 Index: 1, Value: 17
 Index: 0, Page: 2, Slot: 3
 Index: 1, Page: 3, Slot: 5
 Index: 2, Page: 4, Slot: -1
Message: THIS LEAF NODE
Message: NODE IS FULL
Message: HANDLING LEAF OVERFLOW
 ---------- New Node Data ----------

 ------- Node Page: 5 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 17
 Index: 1, Value: 0
 Index: 0, Page: 3, Slot: 5
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 4, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 11
 Index: 1, Value: 13
 Index: 0, Page: 2, Slot: 3
 Index: 1, Page: 1, Slot: 2
 Index: 2, Page: 5, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 4
 tree)->mgmtData->treeNumEntries: 4
 Return Key: 17
----- Updated NODE and TREE DATA ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 11
 Index: 1, Value: 13
 Index: 0, Page: 2, Slot: 3
 Index: 1, Page: 1, Slot: 2
 Index: 2, Page: 5, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 5
 tree)->mgmtData->treeNumEntries: 5
Message: CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 4, Slot: -1
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 5
 tree)->mgmtData->treeNumEntries: 5
INFO: NON-LEAF SPLIT IS REQUIRED
INFO: THIS IS ROOT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 4, Slot: -1
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 3
 tree)->mgmtData->treeNumNodes: 5
 tree)->mgmtData->treeNumEntries: 5
 ---------- New Node Data ----------

 ------- Node Page: 6 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 4, Slot: -1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: -1, Slot: -1
 ---------- New Root Data ----------

 ------- Node Page: 7 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0==7352== Invalid read of size 4
==7352==    at 0x804E585: printNodeData (btree_mgr.c:1982)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82d8 is 0 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E5A8: printNodeData (btree_mgr.c:1984)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82e0 is 8 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E5BF: printNodeData (btree_mgr.c:1985)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82e8 is 16 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E60E: printNodeData (btree_mgr.c:1988)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82e4 is 12 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E5DF: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E5E2: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae8328 is 0 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E5EC: printNodeData (btree_mgr.c:1989)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae8364 is 4 bytes inside a block of size 16 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DACC: freeBTreeNodePage (btree_mgr.c:1773)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E669: printNodeData (btree_mgr.c:1991)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82e4 is 12 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E622: printNodeData (btree_mgr.c:1992)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E625: printNodeData (btree_mgr.c:1992)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae832c is 4 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E630: printNodeData (btree_mgr.c:1992)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae83a4 is 4 bytes inside a block of size 24 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAB0: freeBTreeNodePage (btree_mgr.c:1771)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E636: printNodeData (btree_mgr.c:1992)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E639: printNodeData (btree_mgr.c:1992)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae832c is 4 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804E644: printNodeData (btree_mgr.c:1992)
==7352==    by 0x804BD38: searchAndInsertKey (btree_mgr.c:925)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae83a0 is 0 bytes inside a block of size 24 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAB0: freeBTreeNodePage (btree_mgr.c:1771)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DA96: freeBTreeNodePage (btree_mgr.c:1770)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DA99: freeBTreeNodePage (btree_mgr.c:1770)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae832c is 4 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAA3: freeBTreeNodePage (btree_mgr.c:1771)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAA6: freeBTreeNodePage (btree_mgr.c:1771)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae832c is 4 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid free() / delete / delete[] / realloc()
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAB0: freeBTreeNodePage (btree_mgr.c:1771)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae83a0 is 0 bytes inside a block of size 24 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAB0: freeBTreeNodePage (btree_mgr.c:1771)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAB4: freeBTreeNodePage (btree_mgr.c:1772)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAB7: freeBTreeNodePage (btree_mgr.c:1772)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae8328 is 0 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAC0: freeBTreeNodePage (btree_mgr.c:1773)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAC3: freeBTreeNodePage (btree_mgr.c:1773)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae8328 is 0 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid free() / delete / delete[] / realloc()
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DACC: freeBTreeNodePage (btree_mgr.c:1773)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae8360 is 0 bytes inside a block of size 16 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DACC: freeBTreeNodePage (btree_mgr.c:1773)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DAD0: freeBTreeNodePage (btree_mgr.c:1774)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid read of size 4
==7352==    at 0x804DADA: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82f0 is 24 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid free() / delete / delete[] / realloc()
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae8328 is 0 bytes inside a block of size 8 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAE4: freeBTreeNodePage (btree_mgr.c:1775)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== Invalid free() / delete / delete[] / realloc()
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804BD54: searchAndInsertKey (btree_mgr.c:928)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352==  Address 0x4ae82d8 is 0 bytes inside a block of size 28 free'd
==7352==    at 0x402AE9A: free (vg_replace_malloc.c:468)
==7352==    by 0x804DAF5: freeBTreeNodePage (btree_mgr.c:1777)
==7352==    by 0x804C487: handleRootOverflow (btree_mgr.c:1168)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
, Page: 3, Slot: -1
 Index: 1, Page: 6, Slot: -1
 Index: 2, Page: -1, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 7
 tree)->mgmtData->treeNumEntries: 5
 ---------- Updated Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 52
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 7
 tree)->mgmtData->treeNumEntries: 5
 ---- INSERTING KEY: 1 ----Calling searchAndInsertKey.... From nodePageNum: 7
---------- Current Node Data: ---------

 ------- Node Page: 7 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 3, Slot: -1
 Index: 1, Page: 6, Slot: -1
 Index: 2, Page: -1, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 3
---------- Current Node Data: ---------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 2, Slot: -1
Message: THIS IS A NON LEAF NODE.
 Calling searchAndInsertKey... to work with childPageNum: 1
---------- Current Node Data: ---------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 11
 Index: 1, Value: 13
 Index: 0, Page: 2, Slot: 3
 Index: 1, Page: 1, Slot: 2
 Index: 2, Page: 5, Slot: -1
Message: THIS LEAF NODE
Message: NODE IS FULL
Message: HANDLING LEAF OVERFLOW
 ---------- New Node Data ----------

 ------- Node Page: 8 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 13
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: 2
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 5, Slot: -1
 ---------- Old Node Data ----------

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 1
 Index: 1, Value: 11
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: 2, Slot: 3
 Index: 2, Page: 8, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 7
 tree)->mgmtData->treeNumEntries: 5
 Return Key: 13
----- Updated NODE and TREE DATA ----

 ------- Node Page: 1 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 1
 Index: 1, Value: 11
 Index: 0, Page: 1, Slot: 1
 Index: 1, Page: 2, Slot: 3
 Index: 2, Page: 8, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 8
 tree)->mgmtData->treeNumEntries: 6
Message: CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 23
 Index: 1, Value: 0
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: -1, Slot: -1
 Index: 2, Page: 2, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 8
 tree)->mgmtData->treeNumEntries: 6
 INFO: NOT FULL. NO SPLIT
 ---------- Updated Node Data ----------

 ------- Node Page: 3 --------
 -- Mgmt Info --
 nodePage->numKeys: 2
 nodePage->numPointers: 3
 Index: 0, Value: 13
 Index: 1, Value: 23
 Index: 0, Page: 1, Slot: -1
 Index: 1, Page: 8, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 8
 tree)->mgmtData->treeNumEntries: 6
Message: NO CHILD SPLIT
 ---------- Current Node Data ----------

 ------- Node Page: 7 --------
 -- Mgmt Info --
 nodePage->numKeys: 1
 nodePage->numPointers: 2
 Index: 0, Value: 52
 Index: 1, Value: 0
 Index: 0, Page: 3, Slot: -1
 Index: 1, Page: 6, Slot: -1
 Index: 2, Page: -1, Slot: -1
 --- Tree Info ---
 tree)->mgmtData->rootNodePageNum: 7
 tree)->mgmtData->treeNumNodes: 8
 tree)->mgmtData->treeNumEntries: 6[test_assign4_1.c-random insertion order and scan-L242-19:45:27] OK: expected <6> and was <6>: number of entries in btree
[test_assign4_1.c-random insertion order and scan-L250-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-random insertion order and scan-L250-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-random insertion order and scan-L250-19:45:27] OK: expected true: did we find the correct RID?
[test_assign4_1.c-random insertion order and scan-L252-19:45:27] OK: expected <303> and was <303>: no error returned by scan
[test_assign4_1.c-random insertion order and scan-L253-19:45:27] FAILED: expected <6> but was <3>: have seen all entries
==7352== 
==7352== HEAP SUMMARY:
==7352==     in use at exit: 109,576 bytes in 2,116 blocks
==7352==   total heap usage: 14,466 allocs, 12,354 frees, 8,788,660 bytes allocated
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 22 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804ACD7: insertKey (btree_mgr.c:391)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 23 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B800: searchAndInsertKey (btree_mgr.c:778)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 24 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x80503F5: updatePageFrameList (page_replacement.c:173)
==7352==    by 0x804EE39: pinPage (buffer_mgr.c:254)
==7352==    by 0x804B5ED: searchAndInsertKey (btree_mgr.c:714)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 25 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B68B: searchAndInsertKey (btree_mgr.c:733)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 26 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B6EA: searchAndInsertKey (btree_mgr.c:746)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 27 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B68B: searchAndInsertKey (btree_mgr.c:733)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 28 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B6EA: searchAndInsertKey (btree_mgr.c:746)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 29 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804BC02: searchAndInsertKey (btree_mgr.c:895)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 30 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804ACD7: insertKey (btree_mgr.c:391)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 31 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B800: searchAndInsertKey (btree_mgr.c:778)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 32 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B68B: searchAndInsertKey (btree_mgr.c:733)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 33 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B6EA: searchAndInsertKey (btree_mgr.c:746)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 34 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804BC02: searchAndInsertKey (btree_mgr.c:895)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 35 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804C428: handleRootOverflow (btree_mgr.c:1155)
==7352==    by 0x804BD1D: searchAndInsertKey (btree_mgr.c:923)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 36 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B263: searchAndInsertKey (btree_mgr.c:614)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 37 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B68B: searchAndInsertKey (btree_mgr.c:733)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 38 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B6EA: searchAndInsertKey (btree_mgr.c:746)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 24 bytes in 1 blocks are definitely lost in loss record 39 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804BC02: searchAndInsertKey (btree_mgr.c:895)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 48 bytes in 2 blocks are definitely lost in loss record 43 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B800: searchAndInsertKey (btree_mgr.c:778)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 48 bytes in 2 blocks are definitely lost in loss record 44 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B68B: searchAndInsertKey (btree_mgr.c:733)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 48 bytes in 2 blocks are definitely lost in loss record 45 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804D831: updateBTreeManagementPage (btree_mgr.c:1688)
==7352==    by 0x804B6EA: searchAndInsertKey (btree_mgr.c:746)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 48 bytes in 2 blocks are definitely lost in loss record 46 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B00F: nextEntry (btree_mgr.c:504)
==7352==    by 0x8049D58: testIndexScan (test_assign4_1.c:247)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 72 bytes in 3 blocks are definitely lost in loss record 47 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B263: searchAndInsertKey (btree_mgr.c:614)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 72 bytes in 3 blocks are definitely lost in loss record 48 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B263: searchAndInsertKey (btree_mgr.c:614)
==7352==    by 0x804B9EE: searchAndInsertKey (btree_mgr.c:838)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 120 bytes in 5 blocks are definitely lost in loss record 51 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B263: searchAndInsertKey (btree_mgr.c:614)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8048AD5: testInsertAndFind (test_assign4_1.c:75)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== 120 bytes in 5 blocks are definitely lost in loss record 52 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804B263: searchAndInsertKey (btree_mgr.c:614)
==7352==    by 0x804AD48: insertKey (btree_mgr.c:406)
==7352==    by 0x8049AF7: testIndexScan (test_assign4_1.c:238)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 120 bytes in 5 blocks are definitely lost in loss record 53 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804AF95: nextEntry (btree_mgr.c:490)
==7352==    by 0x8049D58: testIndexScan (test_assign4_1.c:247)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 4,096 bytes in 1 blocks are definitely lost in loss record 57 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x804ED08: pinPage (buffer_mgr.c:232)
==7352==    by 0x804AF95: nextEntry (btree_mgr.c:490)
==7352==    by 0x8049D58: testIndexScan (test_assign4_1.c:247)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 8,216 (24 direct, 8,192 indirect) bytes in 3 blocks are definitely lost in loss record 59 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x804AF6D: nextEntry (btree_mgr.c:489)
==7352==    by 0x8049D58: testIndexScan (test_assign4_1.c:247)
==7352==    by 0x804883D: main (test_assign4_1.c:35)
==7352== 
==7352== 48,000 bytes in 2,000 blocks are definitely lost in loss record 61 of 61
==7352==    at 0x402BF21: malloc (vg_replace_malloc.c:291)
==7352==    by 0x8050155: updateList (page_replacement.c:83)
==7352==    by 0x804EDC2: pinPage (buffer_mgr.c:237)
==7352==    by 0x804A6E5: findKey (btree_mgr.c:210)
==7352==    by 0x8048DB6: testInsertAndFind (test_assign4_1.c:90)
==7352==    by 0x8048838: main (test_assign4_1.c:33)
==7352== 
==7352== LEAK SUMMARY:
==7352==    definitely lost: 53,248 bytes in 2,051 blocks
==7352==    indirectly lost: 8,192 bytes in 2 blocks
==7352==      possibly lost: 0 bytes in 0 blocks
==7352==    still reachable: 48,136 bytes in 63 blocks
==7352==         suppressed: 0 bytes in 0 blocks
==7352== Reachable blocks (those to which a pointer was found) are not shown.
==7352== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7352== 
==7352== For counts of detected and suppressed errors, rerun with: -v
==7352== Use --track-origins=yes to see where uninitialised values come from
==7352== ERROR SUMMARY: 186 errors from 77 contexts (suppressed: 0 from 0)
