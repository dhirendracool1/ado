==26579== Memcheck, a memory error detector
==26579== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==26579== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==26579== Command: ./test_assign4_1
==26579== 
==26579== Conditional jump or move depends on uninitialised value(s)
==26579==    at 0x804C4A5: findChildPageIntKey (btree_mgr.c:1234)
==26579==    by 0x804B16A: searchAndInsertKey (btree_mgr.c:610)
==26579==    by 0x804AC60: insertKey (btree_mgr.c:379)
==26579==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==26579==    by 0x8048838: main (test_assign4_1.c:33)
==26579== 
==26579== Conditional jump or move depends on uninitialised value(s)
==26579==    at 0x804C4C0: findChildPageIntKey (btree_mgr.c:1236)
==26579==    by 0x804B16A: searchAndInsertKey (btree_mgr.c:610)
==26579==    by 0x804AC60: insertKey (btree_mgr.c:379)
==26579==    by 0x8048AD0: testInsertAndFind (test_assign4_1.c:75)
==26579==    by 0x8048838: main (test_assign4_1.c:33)
==26579== 
==26579== Conditional jump or move depends on uninitialised value(s)
==26579==    at 0x804CEB8: freeBMPageHandle (btree_mgr.c:1451)
==26579==    by 0x804A6F5: findKey (btree_mgr.c:209)
==26579==    by 0x8048DB1: testInsertAndFind (test_assign4_1.c:90)
==26579==    by 0x8048838: main (test_assign4_1.c:33)
==26579== 
[test_assign4_1.c-test b-tree inserting and search-L79-00:49:01] OK: expected <4> and was <4>: number of nodes in btree
[test_assign4_1.c-test b-tree inserting and search-L81-00:49:01] OK: expected <6> and was <6>: number of entries in btree
[test_assign4_1.c-test b-tree inserting and search-L91-00:49:01] OK: expected true: did we find the correct RID?
[test_assign4_1.c-test b-tree inserting and search-L90-00:49:01] FAILED: Operation returned error: EC (23)

==26579== 
==26579== HEAP SUMMARY:
==26579==     in use at exit: 61,644 bytes in 129 blocks
==26579==   total heap usage: 199 allocs, 70 frees, 159,158 bytes allocated
==26579== 
==26579== LEAK SUMMARY:
==26579==    definitely lost: 824 bytes in 37 blocks
==26579==    indirectly lost: 16,960 bytes in 40 blocks
==26579==      possibly lost: 0 bytes in 0 blocks
==26579==    still reachable: 43,860 bytes in 52 blocks
==26579==         suppressed: 0 bytes in 0 blocks
==26579== Rerun with --leak-check=full to see details of leaked memory
==26579== 
==26579== For counts of detected and suppressed errors, rerun with: -v
==26579== Use --track-origins=yes to see where uninitialised values come from
==26579== ERROR SUMMARY: 5 errors from 3 contexts (suppressed: 0 from 0)
